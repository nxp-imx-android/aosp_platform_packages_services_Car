// Copyright (C) 2019 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//

// Build the Car service.

package {
    default_applicable_licenses: ["Android-Apache-2.0"],
}

genrule {
    name: "statslog-Car-java-gen",
    tools: ["stats-log-api-gen"],
    cmd: "$(location stats-log-api-gen) --java $(out) --module car --javaPackage com.android.car"
        + " --javaClass CarStatsLog",
    out: ["com/android/car/CarStatsLog.java"],
}

car_service_sources = [
    "src/**/*.java",
    ":statslog-Car-java-gen",
]

common_lib_deps = [
    "android.automotive.telemetry.internal-java",  // ICarTelemetryInternal
    "android.car.cluster.navigation",
    "android.car.watchdoglib",
    "android.frameworks.automotive.powerpolicy.internal-java",
    "android.hidl.base-V1.0-java",
    "android.hardware.automotive.audiocontrol-V1.0-java",
    "android.hardware.automotive.audiocontrol-V2.0-java",
    "android.hardware.automotive.audiocontrol-V1-java",
    "android.hardware.automotive.vehicle-V2.0-java",
    "android.hardware.health-V1.0-java",
    "android.hardware.health-V2.0-java",
    "android.hardware.automotive.occupant_awareness-V1-java",
    "vehicle-hal-support-lib",
    "com.android.car.procfsinspector-client",
    "cartelemetry-protos",
]

android_app {
    name: "CarServiceUpdatable",

    srcs: car_service_sources,

    resource_dirs: ["res"],

    // Resource is still com.android.car.R
    aaptflags: [
        "--custom-package com.android.car",
    ],

    platform_apis: true,

    optimize: {
        proguard_flags_files: ["proguard.flags"],
        enabled: false,
    },

    libs: [
        "android.car",
        "android.car.builtin"
    ],

    static_libs: common_lib_deps,

    jni_libs: [
        "libcarservicejni",
        "libscriptexecutorjni",
    ],

    required: ["allowed_privapp_com.android.car"],

    // Disable build in PDK, missing aidl import breaks build
    product_variables: {
        pdk: {
            enabled: false,
        },
    },
}

// TODO(b/194941497): SHIPSTOP - remove this
// This will generate empty stub version for the added source. This is useful to add dependency
// which is still using hidden API. Any component added to android.car.module should be removed
// from this.
droidstubs {
    name: "carservice-stub-for-hidden-api-check-docs",
    // Code under here are still having hidden API inside
    srcs: [
        "src/com/android/car/CarLocalServices.java",
        //"src/com/android/car/hal/UserHalService.java",
        //"src/com/android/car/systeminterface/SystemStateInterface.java",
        //"src/com/android/car/systeminterface/DisplayInterface.java",
    ],
    // metalava still hides hidden methods even with --hidden, so needs additional annotation
    // to include them
    args: "--hide CallbackInterface --hide UnhiddenSystemApi " +
        "--stub-packages com.android.car* --package " +
        "--show-annotation android.annotation.SystemApi " +
        "--show-annotation com.android.internal.annotations.VisibleForTesting " +
        "--show-annotation android.car.annotation.MandatoryFeature " +
        "--show-annotation android.car.annotation.OptionalFeature " +
        "--show-annotation com.android.car.internal.VisibleForHiddenApiCheck ",

    installable: false,

    libs: [
        "android.car-module.impl",
        "android.car.builtin",
        "framework-annotations-lib",
        "framework-statsd",
        "modules-utils-preconditions",
    ],
    visibility: ["//packages/services/Car/service"],
}

// TODO(b/194941497): SHIPSTOP - remove CarServiceModule & android.car.module
android_app {
    name: "CarServiceModule",

    manifest: "AndroidManifestForModuleBuildTest.xml",

    srcs: [
        ":carservice-stub-for-hidden-api-check-docs",
        ":statslog-Car-java-gen",
        //"src/com/android/car/CarFeatureController.java", // Car not complete yet
        "src/com/android/car/CarLog.java",
        //"src/com/android/car/CarLocalServices.java",
        "src/com/android/car/CarServiceBase.java",
        "src/com/android/car/CarServiceUtils.java",
        "src/com/android/car/CarStatsLogHelper.java",
        "src/com/android/car/CommonThread.java",
        "src/com/android/car/PermissionHelper.java",
        //"src/com/android/car/*.java",
        //"src/com/android/car/admin/**/*.java",
        //"src/com/android/car/am/**/*.java",
        //"src/com/android/car/audio/**/*.java",
        //"src/com/android/car/bluetooth/**/*.java",
        //"src/com/android/car/cluster/**/*.java",
        //"src/com/android/car/evs/**/*.java",
        //"src/com/android/car/garagemode/**/*.java",
        //"src/com/android/car/hal/**/*.java",
        //"src/com/android/car/pm/**/*.java",
        //"src/com/android/car/power/**/*.java",
        "src/com/android/car/stats/**/*.java",
        //"src/com/android/car/storagemonitoring/**/*.java",
        //"src/com/android/car/systeminterface/**/*.java",
        //"src/com/android/car/telemetry/**/*.java",
        //"src/com/android/car/user/**/*.java",
        "src/com/android/car/util/*.java",
        "src/com/android/car/vms/**/*.java",
        //"src/com/android/car/watchdog/**/*.java",
    ],

    exclude_srcs: [
        "src/com/android/car/CarServiceImpl.java",
        "src/com/android/car/ICarImpl.java",
    ],

    resource_dirs: ["res"],

    // Resource is still com.android.car.R
    aaptflags: [
        "--custom-package com.android.car",
    ],

    sdk_version: "module_current",

    platform_apis: false,

    libs: [
        "android.car-module.impl",
        "android.car.builtin",
        "framework-annotations-lib",
        "framework-statsd",
        "modules-utils-os",
        "modules-utils-preconditions",
    ],

    static_libs: [
        "android.automotive.telemetry.internal-java",  // ICarTelemetryInternal
        "android.car.cluster.navigation",
        "android.car.watchdoglib",
        "android.frameworks.automotive.powerpolicy.internal-java",
        "android.hidl.base-V1.0-java",
        "android.hardware.automotive.audiocontrol-V1.0-java",
        "android.hardware.automotive.audiocontrol-V2.0-java",
        "android.hardware.automotive.audiocontrol-V1-java",
        "android.hardware.automotive.vehicle-V2.0-java",
        "android.hardware.health-V1.0-java",
        "android.hardware.health-V2.0-java",
        "android.hardware.automotive.occupant_awareness-V1-java",
        "vehicle-hal-support-lib",
        //"car-systemtest",
        "com.android.car.procfsinspector-client",
        "cartelemetry-protos",
    ],

    optimize: {
        proguard_flags_files: ["proguard.flags"],
        enabled: false,
    },
}

java_library {

    name: "car-service-common-util-static-lib",

    srcs: [
        "src/com/android/car/CarServiceBase.java",
        "src/com/android/car/CarServiceUtils.java",
        "src/com/android/car/CarLog.java",
        "src/com/android/car/util/IndentingPrintWriter.java",
        "src/com/android/car/util/TransitionLog.java",
    ],

    libs: [
        "android.car.builtin",
        "android.car",
    ],

    product_variables: {
            pdk: {
                enabled: false,
            },
    },
}

// Minimum code shared with carservice builtin.
// Be careful with what is added here as it takes double space.
// Also static instance sharing will not work.
java_library {
    name: "car-service-lib-for-builtin",

    srcs: [
        "src/com/android/car/CarLog.java",
        "src/com/android/car/util/IndentingPrintWriter.java",
    ],

    libs: [
            "android.car",
    ],
}

//####################################################################################
// Build a static library to help mocking various car services in testing. This is meant to be used
// for internal unit tests around the car service.
//####################################################################################
android_library {
    name: "car-service-test-static-lib",

    srcs: car_service_sources,

    resource_dirs: ["res"],

    // Resource is still com.android.car.R
    aaptflags: [
        "--custom-package com.android.car",
    ],

    libs: [
        "android.car",
        "android.car.builtin",
    ],

    static_libs: common_lib_deps,

    product_variables: {
        pdk: {
            enabled: false,
        },
    },
}

//####################################################################################
// Build a library to help generate a testing library for external apps.
// We do not want to use statically linked libraries, as this will bloat the output jar with classes
// that can conflict with the user's environment.
//####################################################################################
android_library {
    name: "car-service-test-lib",

    srcs: car_service_sources,

    resource_dirs: ["res"],

    // Resource is still com.android.car.R
    aaptflags: [
        "--custom-package com.android.car",
    ],

    libs: common_lib_deps + [
        "android.car",
        "android.car.builtin",
    ],

    product_variables: {
        pdk: {
            enabled: false,
        },
    },
}
