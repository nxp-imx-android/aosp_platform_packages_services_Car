// Copyright 2020 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

cc_binary {
    name: "computepipe_object_detection_runner",
    srcs: [
        "ObjectDetectionGraphRunner.cpp",
    ],
    static_libs: [
        "libcomputepipeprotos",
        "computepipe_client_interface",
        "computepipe_prebuilt_graph",
    ],
    shared_libs: [
        "computepipe_runner_engine",
        "libprotobuf-cpp-lite",
        "libbase",
        "libbinder_ndk",
        "android.automotive.computepipe.runner-ndk_platform",
        "android.automotive.computepipe.registry-ndk_platform",
        "liblog",
        "libutils",
        "libdl",
        "libnativewindow",
        "libobjectdetection",
    ],
    cflags: ["-DLOG_TAG=\"ObjectDetectionRunner\""] + [
        "-Wall",
        "-Werror",
        "-Wunused",
        "-Wunreachable-code",
        "-Wthread-safety",
    ],
    header_libs: [
        "computepipe_runner_includes",
    ],
    include_dirs: [
        "packages/services/Car/computepipe",
    ],
    // Disable builds except for arm64 and emulator devices
    enabled : false,
    arch : {
        arm64 : {
            enabled : true,
        },
        x86 : {
            enabled : true,
        },
        x86_64 : {
            enabled : true,
        },
    },
}

cc_binary {
    name: "computepipe_object_detection_demo_runner",
    srcs: [
        "ObjectDetectionGraphDemoRunner.cpp",
    ],
    static_libs: [
        "libcomputepipeprotos",
        "computepipe_client_interface",
        "computepipe_prebuilt_graph",
    ],
    shared_libs: [
        "computepipe_runner_engine",
        "libprotobuf-cpp-lite",
        "libbase",
        "libbinder_ndk",
        "android.automotive.computepipe.runner-ndk_platform",
        "android.automotive.computepipe.registry-ndk_platform",
        "liblog",
        "libutils",
        "libdl",
        "libnativewindow",
        "libdemoobjectdetection",
    ],
    cflags: ["-DLOG_TAG=\"ObjectDetectionRunner\""] + [
        "-Wall",
        "-Werror",
        "-Wunused",
        "-Wunreachable-code",
        "-Wthread-safety",
    ],
    header_libs: [
        "computepipe_runner_includes",
    ],
    include_dirs: [
        "packages/services/Car/computepipe",
    ],
    // Disable builds except for arm64 and emulator devices
    enabled : false,
    arch : {
        arm64 : {
            enabled : true,
        },
        x86 : {
            enabled : true,
        },
        x86_64 : {
            enabled : true,
        },
    },
}

// This graph use EVS frames as inputs, updated on July 24 2020
cc_prebuilt_library_shared {
    name: "libobjectdetection",
    // TODO(b/160960433): current prebuilt graph only supports arm64, add
    // binary for other architectures as well
    target: {
        android_arm64: {
            srcs: ["lib_arm64/libobjectdetection.so"],
        },
        android_x86_64: {
            srcs: ["lib_x86_64/libobjectdetection.so"],
        },
        android_x86: {
            srcs: ["lib_x86/libobjectdetection.so"],
        },
    },
    shared_libs: [
        "libGLESv3",
        "libandroid",
        "libz",
        "libc",
        "libdl",
        "libEGL",
        "libGLESv2",
        "liblog",
        "libm",
    ],
    required : [
        "ssdlite_object_detection_labelmap.txt",
        "ssdlite_object_detection.tflite",
    ],
}

// This graph use dummy frames as inputs, updated on July 24 2020
cc_prebuilt_library_shared {
    name: "libdemoobjectdetection",
    // TODO(b/160960433): current prebuilt graph only supports arm64, add
    // binary for other architectures as well
    target: {
        android_arm64: {
            srcs: ["lib_arm64/libdemoobjectdetection.so"],
        },
        android_x86_64: {
            srcs: ["lib_x86_64/libdemoobjectdetection.so"],
        },
        android_x86: {
            srcs: ["lib_x86/libdemoobjectdetection.so"],
        },
    },
    shared_libs: [
        "libGLESv3",
        "libandroid",
        "libz",
        "libc",
        "libdl",
        "libEGL",
        "libGLESv2",
        "liblog",
        "libm",
    ],
    required : [
        "ssdlite_object_detection_labelmap.txt",
        "ssdlite_object_detection.tflite",
    ],
}

prebuilt_etc {
    name : "ssdlite_object_detection_labelmap.txt",
    // source file: google3/wireless/android/automotive/caml/
    // object_detection/utils/ssdlite_object_detection_labelmap.txt
    src: "ssdlite_object_detection_labelmap.txt",
    sub_dir: "automotive/sv",
}

prebuilt_etc {
    name : "ssdlite_object_detection.tflite",
    // source file: google3/wireless/android/automotive/caml/
    // object_detection/utils/ssdlite_object_detection.tflite
    src: "ssdlite_object_detection.tflite",
    sub_dir: "automotive/sv",
}
