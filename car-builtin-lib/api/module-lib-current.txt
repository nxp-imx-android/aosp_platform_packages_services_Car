// Signature format: 2.0
package android.car.builtin {

  public final class PermissionHelper {
    field public static final String MONITOR_INPUT = "android.permission.MONITOR_INPUT";
  }

}

package android.car.builtin.app {

  public final class ActivityManagerHelper {
    method @NonNull public static android.app.ActivityOptions createActivityOptions(@NonNull android.os.Bundle);
    method @NonNull public static android.car.builtin.app.ActivityManagerHelper getInstance();
    method public boolean startUserInBackground(int);
    method public boolean startUserInForeground(int);
    method public void stopAllTasksForUser(int);
    method public int stopUserWithDelayedLocking(int, boolean);
    method public boolean unlockUser(int);
  }

  public final class KeyguardManagerHelper {
    ctor public KeyguardManagerHelper();
    method public boolean isKeyguardLocked();
  }

}

package android.car.builtin.content {

  public final class ContextHelper {
    method public static int getDisplayId(@NonNull android.content.Context);
  }

}

package android.car.builtin.input {

  public class InputManagerHelper {
    method public static boolean injectInputEvent(@NonNull android.hardware.input.InputManager, @NonNull android.view.InputEvent);
  }

}

package android.car.builtin.os {

  public final class AudioServiceHelper {
    method public static android.car.builtin.os.AudioServiceHelper.AudioPatchInfo createAudioPatch(@NonNull android.media.AudioDeviceInfo, @NonNull android.media.AudioDeviceInfo, int);
    method public static android.car.builtin.os.AudioServiceHelper.AudioGainInfo getAudioGainInfo(@NonNull android.media.AudioDeviceInfo);
    method public static boolean releaseAudioPatch(@NonNull android.media.AudioManager, @NonNull android.car.builtin.os.AudioServiceHelper.AudioPatchInfo);
    method public static boolean setAudioDeviceGain(@NonNull android.media.AudioManager, @NonNull String, int, boolean);
  }

  public static class AudioServiceHelper.AudioGainInfo {
    method public int getDefaultGain();
    method public int getMaxGain();
    method public int getMinGain();
    method public int getStepValue();
  }

  public static class AudioServiceHelper.AudioPatchInfo {
    ctor public AudioServiceHelper.AudioPatchInfo(@NonNull String, @NonNull String, int);
    method public int getHandleId();
    method public String getSinkAddress();
    method public String getSourceAddress();
  }

  public class BinderHelper {
    method public static void dumpRemoteCallbackList(@NonNull android.os.RemoteCallbackList, @NonNull java.io.PrintWriter, @NonNull String);
  }

  public final class BuildHelper {
    method public static boolean isDebuggableBuild();
    method public static boolean isEngBuild();
    method public static boolean isUserBuild();
    method public static boolean isUserDebugBuild();
  }

  public final class ParcelHelper {
    method @Nullable public static android.util.ArraySet<?> readArraySet(@NonNull android.os.Parcel, @Nullable ClassLoader);
    method @Nullable public static byte[] readBlob(@NonNull android.os.Parcel);
    method @Nullable public static String[] readStringArray(@NonNull android.os.Parcel);
    method public static void writeArraySet(@NonNull android.os.Parcel, @Nullable android.util.ArraySet<?>);
    method public static void writeBlob(@NonNull android.os.Parcel, @Nullable byte[]);
  }

  public final class ServiceManagerHelper {
    method public static void addService(@NonNull String, @NonNull android.os.IBinder);
    method @Nullable public static android.os.IBinder checkService(@NonNull String);
    method @Nullable public static android.os.IBinder getService(@NonNull String);
    method @Nullable public static android.os.IBinder waitForDeclaredService(@NonNull String);
  }

  public final class SharedMemoryHelper {
    method @NonNull public static android.os.ParcelFileDescriptor createParcelFileDescriptor(@NonNull android.os.SharedMemory);
  }

  public final class SystemPropertiesHelper {
    method public static void set(@NonNull String, @Nullable String);
  }

  public final class UserManagerHelper {
    method public static android.graphics.Bitmap assignDefaultIcon(@NonNull android.content.Context, @NonNull android.os.UserHandle);
    method public static void setUserAdmin(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method public static void setUserRestriction(@NonNull android.os.UserManager, @NonNull String, boolean, @NonNull android.os.UserHandle);
    field public static final int USER_NULL = -10000; // 0xffffd8f0
    field public static final String USER_TYPE_FULL_GUEST = "android.os.usertype.full.GUEST";
  }

}

package android.car.builtin.util {

  public final class AtomicFileHelper {
    method public static boolean exists(android.util.AtomicFile);
  }

  public final class Slog {
    method public static int d(@NonNull String, @NonNull String);
    method public static int d(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static int e(@NonNull String, @NonNull String);
    method public static int e(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static int i(@NonNull String, @NonNull String);
    method public static int i(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static int v(@NonNull String, @NonNull String);
    method public static int v(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static int w(@NonNull String, @NonNull String);
    method public static int w(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static int wtf(@NonNull String, @NonNull String);
    method public static int wtf(@NonNull String, @NonNull String, @NonNull Throwable);
  }

  public final class Slogf {
    method public static int d(@NonNull String, @NonNull String);
    method public static int d(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void d(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static int e(@NonNull String, @NonNull String);
    method public static int e(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void e(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static void e(@NonNull String, @NonNull Exception, @NonNull String, @Nullable java.lang.Object...);
    method public static int i(@NonNull String, @NonNull String);
    method public static int i(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void i(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static boolean isLoggable(@NonNull String, int);
    method public static int println(int, @NonNull String, @NonNull String);
    method public static int v(@NonNull String, @NonNull String);
    method public static int v(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void v(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static int w(@NonNull String, @NonNull String);
    method public static int w(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static int w(@NonNull String, @NonNull Throwable);
    method public static void w(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static void w(@NonNull String, @NonNull Exception, @NonNull String, @Nullable java.lang.Object...);
    method public static int wtf(@NonNull String, @NonNull String);
    method public static int wtf(@NonNull String, @NonNull Throwable);
    method public static int wtf(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void wtf(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static void wtf(@NonNull String, @NonNull Exception, @NonNull String, @Nullable java.lang.Object...);
    method public static void wtfQuiet(@NonNull String, @NonNull String);
    method public static int wtfStack(@NonNull String, @NonNull String);
  }

  public class TimingsTraceLog {
    ctor public TimingsTraceLog(@NonNull String, long);
    method public void logDuration(@NonNull String, long);
    method public void traceBegin(@NonNull String);
    method public void traceEnd();
  }

  public final class ValidationHelper {
    method public static boolean isAppIdValid(int);
    method public static boolean isUserIdValid(int);
  }

}

