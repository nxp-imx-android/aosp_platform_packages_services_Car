// Signature format: 2.0
package android.car.builtin {

  public final class PermissionHelper {
    field public static final String MONITOR_INPUT = "android.permission.MONITOR_INPUT";
  }

}

package android.car.builtin.app {

  public final class ActivityManagerHelper {
    method @NonNull public static android.app.ActivityOptions createActivityOptions(@NonNull android.os.Bundle);
    method @Deprecated public android.util.Pair<android.content.Intent,java.lang.Integer> findRootTask(int);
    method @NonNull public static android.car.builtin.app.ActivityManagerHelper getInstance();
    method @Deprecated @Nullable public android.util.SparseArray<android.car.builtin.app.ActivityManagerHelper.TopTaskInfoContainer> getTopTasks();
    method public void registerProcessObserverCallback(android.car.builtin.app.ActivityManagerHelper.ProcessObserverCallback);
    method @Deprecated public void registerTaskStackChangeListener(android.car.builtin.app.ActivityManagerHelper.OnTaskStackChangeListener);
    method public boolean removeTask(int);
    method public void setFocusedRootTask(int);
    method public boolean startUserInBackground(int);
    method public boolean startUserInForeground(int);
    method public void stopAllTasksForUser(int);
    method public int stopUserWithDelayedLocking(int, boolean);
    method public boolean unlockUser(int);
    method public void unregisterProcessObserverCallback(android.car.builtin.app.ActivityManagerHelper.ProcessObserverCallback);
    method @Deprecated public void unregisterTaskStackChangeListener(android.car.builtin.app.ActivityManagerHelper.OnTaskStackChangeListener);
    field public static final int INVALID_TASK_ID = -1; // 0xffffffff
  }

  @Deprecated public static interface ActivityManagerHelper.OnTaskStackChangeListener {
    method @Deprecated public default void onTaskStackChanged();
  }

  public static interface ActivityManagerHelper.ProcessObserverCallback {
    method public default void onForegroundActivitiesChanged(int, int, boolean);
    method public default void onProcessDied(int, int);
  }

  @Deprecated public static class ActivityManagerHelper.TopTaskInfoContainer {
    ctor @Deprecated public ActivityManagerHelper.TopTaskInfoContainer(android.content.ComponentName, int, int, int, int, int, int, android.content.ComponentName, int[], String[]);
    method @Deprecated public boolean isMatching(android.car.builtin.app.ActivityManagerHelper.TopTaskInfoContainer);
    field @Deprecated @Nullable public final android.content.ComponentName baseActivity;
    field @Deprecated public final int[] childTaskIds;
    field @Deprecated public final String[] childTaskNames;
    field @Deprecated public final int displayId;
    field @Deprecated public final int position;
    field @Deprecated public final int rootTaskId;
    field @Deprecated public final int rootTaskUserId;
    field @Deprecated public final int taskId;
    field @Deprecated @Nullable public final android.content.ComponentName topActivity;
    field @Deprecated public final int userId;
  }

  public final class KeyguardManagerHelper {
    ctor public KeyguardManagerHelper();
    method public boolean isKeyguardLocked();
  }

}

package android.car.builtin.content {

  public final class ContextHelper {
    method public static int getDisplayId(@NonNull android.content.Context);
  }

}

package android.car.builtin.content.pm {

  public final class PackageManagerHelper {
    method public static int getApplicationEnabledSettingForUser(@NonNull String, int) throws android.os.RemoteException;
    method public static android.content.ComponentName getComponentName(android.content.pm.ComponentInfo);
    method @Nullable public static String[] getNamesForUids(@NonNull android.content.pm.PackageManager, int[]);
    method public static android.content.pm.PackageInfo getPackageInfoAsUser(@NonNull android.content.pm.PackageManager, @NonNull String, int, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method public static int getPackageUidAsUser(@NonNull android.content.pm.PackageManager, @NonNull String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @NonNull public static String getSystemUiPackageName(@NonNull android.content.Context);
    method public static boolean isOdmApp(@NonNull android.content.pm.ApplicationInfo);
    method public static boolean isOemApp(@NonNull android.content.pm.ApplicationInfo);
    method public static boolean isProductApp(@NonNull android.content.pm.ApplicationInfo);
    method public static boolean isSystemApp(@NonNull android.content.pm.ApplicationInfo);
    method public static boolean isSystemExtApp(@NonNull android.content.pm.ApplicationInfo);
    method public static boolean isUpdatedSystemApp(@NonNull android.content.pm.ApplicationInfo);
    method public static boolean isVendorApp(@NonNull android.content.pm.ApplicationInfo);
    method public static void setApplicationEnabledSettingForUser(@NonNull String, int, int, int, @NonNull String) throws android.os.RemoteException;
  }

}

package android.car.builtin.input {

  public class InputManagerHelper {
    method public static boolean injectInputEvent(@NonNull android.hardware.input.InputManager, @NonNull android.view.InputEvent);
  }

}

package android.car.builtin.job {

  public final class JobSchedulerHelper {
    ctor public JobSchedulerHelper(android.content.Context);
    method public int getNumberOfPendingJobs();
    method public int getNumberOfRunningJobsAtIdle();
  }

}

package android.car.builtin.os {

  public final class AudioServiceHelper {
    method public static String adjustToString(int);
    method public static android.car.builtin.os.AudioServiceHelper.AudioPatchInfo createAudioPatch(@NonNull android.media.AudioDeviceInfo, @NonNull android.media.AudioDeviceInfo, int);
    method public static android.car.builtin.os.AudioServiceHelper.AudioGainInfo getAudioGainInfo(@NonNull android.media.AudioDeviceInfo);
    method public static int getUsageVirtualSource();
    method public static boolean isMasterMute(@NonNull android.media.AudioManager);
    method public static void registerVolumeAndMuteReceiver(android.content.Context, android.car.builtin.os.AudioServiceHelper.VolumeAndMuteReceiver);
    method public static boolean releaseAudioPatch(@NonNull android.media.AudioManager, @NonNull android.car.builtin.os.AudioServiceHelper.AudioPatchInfo);
    method public static boolean setAudioDeviceGain(@NonNull android.media.AudioManager, @NonNull String, int, boolean);
    method public static void setMasterMute(@NonNull android.media.AudioManager, boolean, int);
    method public static void unregisterVolumeAndMuteReceiver(android.content.Context, android.car.builtin.os.AudioServiceHelper.VolumeAndMuteReceiver);
    method public static String usageToString(int);
    method public static String usageToXsdString(int);
    method public static int xsdStringToUsage(String);
    field public static final int UNDEFINED_STREAM_TYPE = -1; // 0xffffffff
  }

  public static class AudioServiceHelper.AudioGainInfo {
    method public int getDefaultGain();
    method public int getMaxGain();
    method public int getMinGain();
    method public int getStepValue();
  }

  public static class AudioServiceHelper.AudioPatchInfo {
    ctor public AudioServiceHelper.AudioPatchInfo(@NonNull String, @NonNull String, int);
    method public int getHandleId();
    method public String getSinkAddress();
    method public String getSourceAddress();
  }

  public abstract static class AudioServiceHelper.VolumeAndMuteReceiver {
    ctor public AudioServiceHelper.VolumeAndMuteReceiver();
    method public abstract void onMuteChanged();
    method public abstract void onVolumeChanged(int);
  }

  public class BinderHelper {
    method public static void dumpRemoteCallbackList(@NonNull android.os.RemoteCallbackList, @NonNull java.io.PrintWriter, @NonNull String);
  }

  public final class BuildHelper {
    method public static boolean isDebuggableBuild();
    method public static boolean isEngBuild();
    method public static boolean isUserBuild();
    method public static boolean isUserDebugBuild();
  }

  public final class ParcelHelper {
    method @Nullable public static android.util.ArraySet<?> readArraySet(@NonNull android.os.Parcel, @Nullable ClassLoader);
    method @Nullable public static byte[] readBlob(@NonNull android.os.Parcel);
    method @Nullable public static String[] readStringArray(@NonNull android.os.Parcel);
    method public static void writeArraySet(@NonNull android.os.Parcel, @Nullable android.util.ArraySet<?>);
    method public static void writeBlob(@NonNull android.os.Parcel, @Nullable byte[]);
  }

  public final class ServiceManagerHelper {
    method public static void addService(@NonNull String, @NonNull android.os.IBinder);
    method @Nullable public static android.os.IBinder checkService(@NonNull String);
    method @Nullable public static android.os.IBinder getService(@NonNull String);
    method @Nullable public static android.os.IBinder waitForDeclaredService(@NonNull String);
  }

  public final class SharedMemoryHelper {
    method @NonNull public static android.os.ParcelFileDescriptor createParcelFileDescriptor(@NonNull android.os.SharedMemory);
  }

  public final class SystemPropertiesHelper {
    method public static void set(@NonNull String, @Nullable String);
  }

  public final class TraceHelper {
    field public static final long TRACE_TAG_CAR_SERVICE = 524288L; // 0x80000L
  }

  public final class UserManagerHelper {
    method public static android.graphics.Bitmap assignDefaultIconForUser(@NonNull android.content.Context, @NonNull android.os.UserHandle);
    method @Deprecated @Nullable public static android.os.UserHandle createGuest(@NonNull android.content.Context, @NonNull android.os.UserManager, @Nullable String);
    method @Deprecated @Nullable public static android.os.UserHandle createUser(@NonNull android.os.UserManager, @Nullable String, @NonNull String, int);
    method @Deprecated @Nullable public static android.os.UserHandle createUser(@NonNull android.os.UserManager, @Nullable String, int);
    method @NonNull public static String getDefaultUserName(@NonNull android.content.Context);
    method public static String getDefaultUserTypeForUserInfoFlags(int);
    method public static int getMaxRunningUsers(@NonNull android.content.Context);
    method @Deprecated public static int getMaxSupportedUsers();
    method @Deprecated public static int getProfileGroupId(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method @Deprecated @NonNull public static java.util.List<android.os.UserHandle> getUserHandles(@NonNull android.os.UserManager, boolean, boolean);
    method @NonNull public static java.util.List<android.os.UserHandle> getUserHandles(@NonNull android.os.UserManager, boolean, boolean, boolean);
    method @Deprecated public static boolean isAdminUser(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method @Deprecated public static boolean isEnabledUser(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method @Deprecated public static boolean isEphemeralUser(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method @Deprecated public static boolean isGuestUser(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method @Deprecated public static boolean isInitializedUser(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method public static boolean isPreCreatedUser(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method @Deprecated public static boolean isProfileUser(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method public static boolean markGuestForDeletion(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method @Nullable public static android.os.UserHandle preCreateUser(@NonNull android.os.UserManager, @NonNull String);
    method @Deprecated public static int removeUserOrSetEphemeral(@NonNull android.os.UserManager, int, boolean);
    method public static void setUserAdmin(@NonNull android.os.UserManager, @NonNull android.os.UserHandle);
    method public static void setUserRestriction(@NonNull android.os.UserManager, @NonNull String, boolean, @NonNull android.os.UserHandle);
    field public static final int FLAG_ADMIN = 2; // 0x2
    field public static final int FLAG_DEMO = 512; // 0x200
    field public static final int FLAG_DISABLED = 64; // 0x40
    field public static final int FLAG_EPHEMERAL = 256; // 0x100
    field public static final int FLAG_FULL = 1024; // 0x400
    field public static final int FLAG_GUEST = 4; // 0x4
    field public static final int FLAG_INITIALIZED = 16; // 0x10
    field public static final int FLAG_MANAGED_PROFILE = 32; // 0x20
    field public static final int FLAG_PRIMARY = 1; // 0x1
    field public static final int FLAG_PROFILE = 4096; // 0x1000
    field public static final int FLAG_QUIET_MODE = 128; // 0x80
    field public static final int FLAG_RESTRICTED = 8; // 0x8
    field public static final int FLAG_SYSTEM = 2048; // 0x800
    field @Deprecated public static final int REMOVE_RESULT_ALREADY_BEING_REMOVED = 2; // 0x2
    field @Deprecated public static final int REMOVE_RESULT_ERROR = 3; // 0x3
    field @Deprecated public static final int REMOVE_RESULT_REMOVED = 0; // 0x0
    field @Deprecated public static final int REMOVE_RESULT_SET_EPHEMERAL = 1; // 0x1
    field public static final int USER_NULL = -10000; // 0xffffd8f0
    field public static final int USER_SYSTEM = 0; // 0x0
    field @Deprecated public static final String USER_TYPE_FULL_GUEST = "android.os.usertype.full.GUEST";
  }

}

package android.car.builtin.power {

  public final class PowerManagerHelper {
    ctor public PowerManagerHelper(android.content.Context);
    method public int getMaximumScreenBrightnessSetting();
    method public int getMinimumScreenBrightnessSetting();
    method public void setDisplayState(boolean, long);
    method public void shutdown(boolean, String, boolean);
  }

}

package android.car.builtin.util {

  public final class AssistUtilsHelper {
    ctor public AssistUtilsHelper(android.content.Context);
    method public boolean hasAssistantComponentForUser(android.os.UserHandle);
    method public void showPushToTalkSessionForActiveService(android.car.builtin.util.AssistUtilsHelper.VoiceInteractionSessionShowCallbackHelper);
  }

  public static interface AssistUtilsHelper.VoiceInteractionSessionShowCallbackHelper {
    method public void onFailed();
    method public void onShown();
  }

  public final class AtomicFileHelper {
    method public static boolean exists(android.util.AtomicFile);
  }

  public final class Slogf {
    method public static int d(@NonNull String, @NonNull String);
    method public static int d(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void d(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static int e(@NonNull String, @NonNull String);
    method public static int e(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void e(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static void e(@NonNull String, @NonNull Exception, @NonNull String, @Nullable java.lang.Object...);
    method public static int i(@NonNull String, @NonNull String);
    method public static int i(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void i(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static boolean isLoggable(@NonNull String, int);
    method public static int println(int, @NonNull String, @NonNull String);
    method public static int v(@NonNull String, @NonNull String);
    method public static int v(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void v(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static int w(@NonNull String, @NonNull String);
    method public static int w(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static int w(@NonNull String, @NonNull Throwable);
    method public static void w(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static void w(@NonNull String, @NonNull Exception, @NonNull String, @Nullable java.lang.Object...);
    method public static int wtf(@NonNull String, @NonNull String);
    method public static int wtf(@NonNull String, @NonNull Throwable);
    method public static int wtf(@NonNull String, @NonNull String, @NonNull Throwable);
    method public static void wtf(@NonNull String, @NonNull String, @Nullable java.lang.Object...);
    method public static void wtf(@NonNull String, @NonNull Exception, @NonNull String, @Nullable java.lang.Object...);
    method public static void wtfQuiet(@NonNull String, @NonNull String);
    method public static int wtfStack(@NonNull String, @NonNull String);
  }

  public class TimeUtils {
    ctor public TimeUtils();
    method public static void dumpTime(java.io.PrintWriter, long);
    method public static void formatDuration(long, java.io.PrintWriter);
  }

  public class TimingsTraceLog {
    ctor public TimingsTraceLog(@NonNull String, long);
    method public void logDuration(@NonNull String, long);
    method public void traceBegin(@NonNull String);
    method public void traceEnd();
  }

  public final class ValidationHelper {
    method public static boolean isAppIdValid(int);
    method public static boolean isUserIdValid(int);
  }

}

package android.car.builtin.view {

  public final class DisplayHelper {
    method public static int getPhysicalPort(android.view.Display);
    method public static String getUniqueId(android.view.Display);
    field public static final int INVALID_PORT = -1; // 0xffffffff
  }

}

package android.car.builtin.widget {

  public final class LockPatternHelper {
    ctor public LockPatternHelper(android.content.Context);
    method public boolean isSecure(int);
  }

}

