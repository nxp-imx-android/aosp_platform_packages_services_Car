/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.car.hardware.power;

import android.annotation.NonNull;
import android.os.Parcelable;

import com.android.internal.util.DataClass;

/**
 * Filter to receive power policy changes that a listener is interested in.
 */
@DataClass(genHiddenConstructor = true)
public final class CarPowerPolicyFilter implements Parcelable {
    /**
     * List of components of interest. Components are one of
     * {@code android.frameworks.automotive.powerpolicy.PowerComponent}.
     */
    public final @NonNull int[] components;



    // Code below generated by codegen v1.0.22.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/packages/services/Car/car-lib/src/android/car/hardware/power/CarPowerPolicyFilter.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    /**
     * Creates a new CarPowerPolicyFilter.
     *
     * @param components
     *   List of components of interest. Components are one of
     *   {@code android.frameworks.automotive.powerpolicy.PowerComponent}.
     * @hide
     */
    @DataClass.Generated.Member
    public CarPowerPolicyFilter(
            @NonNull int[] components) {
        this.components = components;
        com.android.internal.util.AnnotationValidations.validate(
                NonNull.class, null, components);

        // onConstructed(); // You can define this method to get a callback
    }

    @Override
    @DataClass.Generated.Member
    public void writeToParcel(@NonNull android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }

        dest.writeIntArray(components);
    }

    @Override
    @DataClass.Generated.Member
    public int describeContents() { return 0; }

    /** @hide */
    @SuppressWarnings({"unchecked", "RedundantCast"})
    @DataClass.Generated.Member
    /* package-private */ CarPowerPolicyFilter(@NonNull android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }

        int[] _components = in.createIntArray();

        this.components = _components;
        com.android.internal.util.AnnotationValidations.validate(
                NonNull.class, null, components);

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public static final @NonNull Parcelable.Creator<CarPowerPolicyFilter> CREATOR
            = new Parcelable.Creator<CarPowerPolicyFilter>() {
        @Override
        public CarPowerPolicyFilter[] newArray(int size) {
            return new CarPowerPolicyFilter[size];
        }

        @Override
        public CarPowerPolicyFilter createFromParcel(@NonNull android.os.Parcel in) {
            return new CarPowerPolicyFilter(in);
        }
    };

    @DataClass.Generated(
            time = 1607968601669L,
            codegenVersion = "1.0.22",
            sourceFile = "packages/services/Car/car-lib/src/android/car/hardware/power/CarPowerPolicyFilter.java",
            inputSignatures = "public final @android.annotation.NonNull int[] components\nclass CarPowerPolicyFilter extends java.lang.Object implements [android.os.Parcelable]\n@com.android.internal.util.DataClass(genHiddenConstructor=true)")
    @Deprecated
    private void __metadata() {}


    //@formatter:on
    // End of generated code

}
